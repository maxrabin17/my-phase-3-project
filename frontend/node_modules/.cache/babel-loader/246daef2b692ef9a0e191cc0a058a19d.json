{"ast":null,"code":"var _jsxFileName = \"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ContactCard from './ContactCard';\nimport '../App.css';\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = ({\n  user,\n  contacts,\n  userName\n}) => {\n  _s();\n\n  // debugger;\n  // const params = useParams();\n  // console.log(params)\n  // let currentUser = users.data.find((user) => parseInt(params.id) === user.id)\n  // let currentContacts = contacts.data.filter((contact) => contact.user_id === currentUser.id)\n  // console.log(currentContacts)\n  const [form, setForm] = useState({\n    name: \"\",\n    phone_number: \"\",\n    address: \"\"\n  });\n\n  const fetchForm = form => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(`http://localhost:9292/contacts`, config).then(res => res.json()).then(data => console.log(data)).catch(error => console.log(error));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchForm(form); // setForm({\n    //     name: \"\",\n    //     phone_number: \"\",\n    //     address: \"\"\n    // })\n    // e.target.reset()\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Welcome ${userName}!`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Phone Number\",\n          name: \"phone_number\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Address\",\n          name: \"address\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleSubmit,\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-card\",\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n        contact: contact,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 42\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contacts, \"iYBVMwOji+x2oCq7ncSilpguObQ=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js"],"names":["React","useEffect","useState","ContactCard","Form","Button","Contacts","user","contacts","userName","form","setForm","name","phone_number","address","fetchForm","config","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","catch","error","handleSubmit","e","preventDefault","handleChange","target","value","map","contact"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ContactCard from './ContactCard'\nimport '../App.css'\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Contacts = ({user, contacts, userName}) => {\n    \n    // debugger;\n    // const params = useParams();\n    // console.log(params)\n    // let currentUser = users.data.find((user) => parseInt(params.id) === user.id)\n    // let currentContacts = contacts.data.filter((contact) => contact.user_id === currentUser.id)\n    // console.log(currentContacts)\n\n    const [form, setForm] = useState({\n        name: \"\",\n        phone_number: \"\",\n        address: \"\"\n    })\n\n    const fetchForm = (form) => {\n        let config = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify(form)\n        }\n        fetch(`http://localhost:9292/contacts`, config)\n            .then(res => res.json())\n            .then(data => console.log(data))\n            .catch(error => console.log(error))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetchForm(form)\n        // setForm({\n        //     name: \"\",\n        //     phone_number: \"\",\n        //     address: \"\"\n        // })\n        // e.target.reset()\n    }\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    return (\n        <>\n        <div className=\"contact-form\">\n            <Form>\n                <h1>{`Welcome ${userName}!`}</h1>\n                <h2>Create Contact</h2>\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Name\" name=\"name\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Address\" name=\"address\" onChange={ handleChange } />\n                <br />\n                <Button variant=\"success\" onClick={handleSubmit}>Create Contact</Button>\n                <br />\n            </Form>\n            </div>\n            <div className=\"contact-card\">\n                {contacts.map(contact => <ContactCard contact={contact} user={user}/>)}\n            </div>\n            <div>\n\n\n\n                \n            </div>\n        </>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}