{"ast":null,"code":"var _jsxFileName = \"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ContactCard from './ContactCard';\nimport '../App.css';\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = ({\n  user,\n  contacts,\n  setContacts,\n  userName\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    phone_number: \"\",\n    address: \"\",\n    userId: user.id\n  });\n\n  const fetchForm = form => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(`http://localhost:9292/contacts`, config).then(res => res.json()).then(data => setContacts([...contacts, data.contact]));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchForm(form);\n    setForm({\n      name: \"\",\n      phone_number: \"\",\n      address: \"\"\n    });\n    e.target.reset();\n    alert(\"Contact created head to Login link, and Login to continue!\");\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Welcome ${user.username}!`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Phone Number\",\n          name: \"phone_number\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"sm\",\n          type: \"text\",\n          placeholder: \"Address\",\n          name: \"address\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: handleSubmit,\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-card\",\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n        contacts: contacts,\n        contact: contact,\n        setContacts: setContacts\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 42\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contacts, \"S7dtaw+jbHR1OfmmGCfOEajQKBg=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js"],"names":["React","useEffect","useState","ContactCard","Form","Button","Contacts","user","contacts","setContacts","userName","form","setForm","name","phone_number","address","userId","id","fetchForm","config","method","headers","body","JSON","stringify","fetch","then","res","json","data","contact","handleSubmit","e","preventDefault","target","reset","alert","handleChange","value","username","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ContactCard from './ContactCard'\nimport '../App.css'\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Contacts = ({user, contacts, setContacts, userName}) => {\n\n    const [form, setForm] = useState({\n        name: \"\",\n        phone_number: \"\",\n        address: \"\",\n        userId: user.id\n    })\n\n    const fetchForm = (form) => {\n        let config = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify(form)\n        }\n        fetch(`http://localhost:9292/contacts`, config)\n            .then(res => res.json())\n            .then(data => setContacts([...contacts, data.contact]))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetchForm(form)\n        setForm({\n            name: \"\",\n            phone_number: \"\",\n            address: \"\",\n        })\n        e.target.reset()\n        alert(\"Contact created head to Login link, and Login to continue!\")\n    }\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    return (\n        <>\n        <div className=\"contact-form\">\n            <Form>\n                <h1>{`Welcome ${user.username}!`}</h1>\n                <h2>Create Contact</h2>\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Name\" name=\"name\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Address\" name=\"address\" onChange={ handleChange } />\n                <br />\n                <Button variant=\"outline-success\"  onClick={handleSubmit}>Create Contact</Button>\n                <br />\n            </Form>\n            </div>\n            <div className=\"contact-card\">\n                {contacts.map(contact => <ContactCard key={contact.id} contacts={contacts} contact={contact} setContacts={setContacts}/>)}\n            </div>\n            <div>\n\n\n\n\n            </div>\n        </>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}