{"ast":null,"code":"var _jsxFileName = \"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { createBrowserHistory } from \"history\";\nimport { Link } from 'react-router-dom';\nimport Contacts from './Contacts';\nimport '../App.css';\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = createBrowserHistory();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [users, setUsers] = useState({});\n\n  const compareFetchToForm = () => {\n    debugger;\n\n    if (users.includes(form)) {\n      const user = users.find(form.username);\n      history.push(`user/${user.id}`);\n    } else {\n      alert(\"User does not exist!\");\n    }\n  };\n\n  const fetchForm = () => {\n    fetch(\"http://localhost:9292/users\").then(res => res.json()) // .then(data => setUsers(data))\n    .then(data => console.log(data));\n  };\n\n  useEffect(() => {\n    fetchForm();\n  }, []);\n\n  const handleClick = e => {\n    e.preventDefault();\n    fetchForm(form);\n    setForm({\n      username: \"\",\n      password: \"\"\n    });\n    e.target.reset(); // alert(\"Account created head to Login link, and Login to continue!\")\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Username\",\n          onChange: handleChange,\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          onChange: handleChange,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: compareFetchToForm,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"rUaO0RSf4oTqdY36iaT/epTj+JE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Login.js"],"names":["React","useState","useEffect","createBrowserHistory","Link","Contacts","Form","Button","Login","history","form","setForm","username","password","users","setUsers","compareFetchToForm","includes","user","find","push","id","alert","fetchForm","fetch","then","res","json","data","console","log","handleClick","e","preventDefault","target","reset","handleChange","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createBrowserHistory } from \"history\"\nimport { Link } from 'react-router-dom'\nimport Contacts from './Contacts'\nimport '../App.css'\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Login = () => {\n\n    const history = createBrowserHistory()\n\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    const [users, setUsers] = useState({})\n\n    const compareFetchToForm = () => {\n        debugger;\n        if (users.includes(form)) {\n            const user = users.find(form.username)\n            history.push(`user/${user.id}`)\n        }\n        else {\n            alert(\"User does not exist!\")\n        }\n    }\n    \n    const fetchForm = () => {\n        fetch(\"http://localhost:9292/users\")\n            .then(res => res.json())\n            // .then(data => setUsers(data))\n            .then(data => console.log(data))\n    }\n    useEffect(() => {\n        fetchForm()\n    }, [])\n\n    const handleClick = (e) => {\n        e.preventDefault()\n        fetchForm(form)\n        setForm({\n            username: \"\",\n            password: \"\"\n        })\n        e.target.reset()\n        // alert(\"Account created head to Login link, and Login to continue!\")\n    }\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    return (\n        <div className = \"sign-up-form\">\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={ handleChange } name = \"username\"/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={ handleChange } name = \"password\"/>\n                </Form.Group>\n                {/* <Link to={`user/${id}`}> */}\n                    <Button variant=\"primary\" type=\"submit\" onClick={compareFetchToForm}>\n                        Login\n                    </Button>\n                {/* </Link> */}\n            </Form>\n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}