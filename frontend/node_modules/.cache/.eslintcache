[{"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/index.js":"1","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Characters.js":"2","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/IndChar.js":"3","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Search.js":"4","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/IndQuote.js":"5","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Quotes.js":"6","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Home.js":"7","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/App.js":"8","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/HomeChar.js":"9","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/HomeQuote.js":"10","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/FilterButton.js":"11","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/index.js":"12","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/App.js":"13","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Signup.js":"14","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Login.js":"15","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js":"16","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/ContactCard.js":"17"},{"size":209,"mtime":1623694459256,"results":"18","hashOfConfig":"19"},{"size":849,"mtime":1624548613097,"results":"20","hashOfConfig":"19"},{"size":1591,"mtime":1624555995610,"results":"21","hashOfConfig":"19"},{"size":643,"mtime":1623686637947,"results":"22","hashOfConfig":"19"},{"size":928,"mtime":1624456859068,"results":"23","hashOfConfig":"19"},{"size":707,"mtime":1624459883126,"results":"24","hashOfConfig":"19"},{"size":2836,"mtime":1624557762231,"results":"25","hashOfConfig":"19"},{"size":1134,"mtime":1624547997050,"results":"26","hashOfConfig":"19"},{"size":366,"mtime":1624556011338,"results":"27","hashOfConfig":"19"},{"size":305,"mtime":1624549171057,"results":"28","hashOfConfig":"19"},{"size":438,"mtime":1624556676648,"results":"29","hashOfConfig":"19"},{"size":218,"mtime":1626548224975,"results":"30","hashOfConfig":"31"},{"size":1964,"mtime":1627165530755,"results":"32","hashOfConfig":"31"},{"size":2165,"mtime":1627747248707,"results":"33","hashOfConfig":"31"},{"size":1532,"mtime":1627142049445,"results":"34","hashOfConfig":"31"},{"size":2137,"mtime":1627581540754,"results":"35","hashOfConfig":"31"},{"size":1341,"mtime":1627161705767,"results":"36","hashOfConfig":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1mhqfw0",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1v6vff2",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/index.js",[],["77","78"],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Characters.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/IndChar.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Search.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/IndQuote.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Quotes.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/Home.js",["79"],"import React, {useState, useEffect} from 'react'\nimport '../App.css';\nimport HomeChar from './HomeChar';\nimport HomeQuote from './HomeQuote';\nimport FilterButton from './FilterButton'\n\nconst Home = () => {\n    const [char, setChar] = useState([])\n    const [quote, setQuote] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/favCharacters`)\n        .then(res => res.json())\n        .then(data => setChar(data))\n\n        fetch(`http://localhost:3000/favQuotes`)\n        .then(res => res.json())\n        .then(data => setQuote(data))\n    }, [])\n\nconst handleDeleteChar = (e) => {\n    let config = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Accepts\": \"application/json\"\n        }\n    }\n    fetch(`http://localhost:3000/favCharacters/${e.target.id}`, config)\n        .then(res => res.json())\n        .then(data => console.log(data))\n\n        filterChar(e.target.id)\n} \n\n    const filterChar = (id) => {\n        const updatedChar = char.filter((char) => {\n            return parseInt(id) !== char.id\n        })\n        setChar(updatedChar)\n    }\n\nconst handleDeleteQuote = (e) => {\n    let config = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Accepts\": \"application/json\"\n        }\n    }\n    fetch(`http://localhost:3000/favQuotes/${e.target.id}`, config)\n        .then(res => res.json())\n        .then(data => console.log(data))\n\n        filterQuote(e.target.id)\n\n    } \n\n    const filterQuote = (id) => {\n        const updatedQuote = quote.filter((quote) => {\n            return parseInt(id) !== quote.id\n        })\n        setQuote(updatedQuote)\n    }\n\n    // const handleFilter = () => {\n    //     const filteredChar = char.filter((c) => {\n    //         return c.status == \"Alive\"\n    //     })\n    //     console.log(filteredChar)\n    //     setChar(filteredChar)\n    // }\n\n    \n    return (\n        <div className=\"home-page-container\">\n            <h1>Welcome to Breaking Bad Quick Facts & Quotes</h1>\n            <div className=\"home-page-elements\">\n                <div className=\"character-column\">\n                    <h2>Favorite Characters</h2>\n                    {/* <FilterButton handleFilter={handleFilter}/> */}\n                        <div className=\"fav-char\">\n                        {char.map(c => <HomeChar c={c} handleDelete={handleDeleteChar}/>)}\n                        </div>\n                </div>\n                <div className=\"quote-column\">\n                    <h2>Favorite Quotes</h2>\n                        <div className=\"fav-quote\">\n                            {quote.map(q => <HomeQuote q={q} handleDelete={handleDeleteQuote}/>)}\n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/App.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/HomeChar.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/HomeQuote.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-2-project/src/components/FilterButton.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/index.js",[],["80","81"],"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/App.js",["82","83"],"import React, {useEffect, useState} from 'react'\nimport { Navbar, Container } from 'react-bootstrap'\nimport '../App.css'\nimport Login from './Login'\nimport Signup from './Signup'\nimport Contacts from './Contacts'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nconst App = () => {\n\n    const [loading, setLoading] = useState(false)\n    const [userName, setUserName] = useState(\"\")\n    const [user, setUser] = useState({})\n    const [contacts, setContacts] = useState([])\n    // const [contactId, setContactId] = useState(0)\n\n    const fetchUsers = () => {\n        fetch(`http://localhost:9292/users/search?q=${userName}`)\n            .then(res => res.json())\n            .then(data => {\n                setUser(data.user)\n                setContacts(data.userContacts)\n                setLoading(false)\n            })\n            // .then(data => console.log(data))\n    }\n\n    useEffect(async () => {\n        await fetchUsers()\n    }, [userName])\n\n    if (loading) {\n        return (\n            <div>\n                ...Loading\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" className = 'navbar'>\n                <Container>\n                <Navbar.Brand href=\"/\">Contact Book App</Navbar.Brand>\n                </Container>\n            </Navbar>\n            <Router>\n                <Switch>\n                    <Route exact path = \"/login\">\n                        <Login user={user} setUserName={setUserName} userName={userName}/>\n                    </Route>\n                    <Route exact path=\"/\">\n                        <Signup />\n                    </Route>\n                    <Route path='/contacts'>\n                        <Contacts contacts={contacts} setContacts={setContacts} user={user} setUserName={setUserName} userName={userName}/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Signup.js",[],"/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Login.js",["84"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport '../App.css'\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Login = ({user, setUserName, userName}) => {\n\n    const history = useHistory()\n\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setUserName(form.username)\n        history.push(`/contacts`)\n    }\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    return (\n        <div className=\"sign-up-form\">\n            <h1>Log in!</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={ handleChange } name = \"username\"/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={ handleChange } name = \"password\"/>\n                </Form.Group>\n                <Button variant=\"outline-success\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/Contacts.js",["85","86"],"import React, { useEffect, useState } from 'react'\nimport ContactCard from './ContactCard'\nimport '../App.css'\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Contacts = ({user, contacts, setContacts, userName}) => {\n    \n    const [form, setForm] = useState({\n        name: \"\",\n        phone_number: \"\",\n        address: \"\",\n        user_id: 0\n    })\n\n    const fetchForm = (form) => {\n        let config = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify(form)\n        }\n        fetch(`http://localhost:9292/contacts`, config)\n            .then(res => res.json())\n            .then(data => setContacts([...contacts, data.contact]))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetchForm(form)\n    }\n    \n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n            [\"user_id\"]: user.id\n        });\n    };\n\n    return (\n        <>\n        <div className=\"contact-form\">\n            <Form>\n                <h1>{`Welcome ${userName}!`}</h1>\n                <h2>Create Contact</h2>\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Name\" name=\"name\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\" onChange={ handleChange }/>\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Address\" name=\"address\" onChange={ handleChange } />\n                <br />\n                <Button variant=\"outline-success\"  onClick={handleSubmit}>Create Contact</Button>\n                <br />\n            </Form>\n            </div>\n            <div className=\"contact-card\">\n                {contacts.map(contact => <ContactCard contacts={contacts} contact={contact} setContacts={setContacts}/>)}\n            </div>\n            <div>\n\n\n\n\n            </div>\n        </>\n    )\n}\n\nexport default Contacts\n","/Users/maxrabin/Development/Sandbox/my-phase-3-project/frontend/src/components/ContactCard.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":20},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":28,"column":15,"nodeType":"99","endLine":30,"endColumn":6},{"ruleId":"97","severity":1,"message":"100","line":30,"column":8,"nodeType":"101","endLine":30,"endColumn":18,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"103","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":39,"column":13,"nodeType":"106","messageId":"107","endLine":39,"endColumn":33,"fix":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'FilterButton' is defined but never used.","Identifier","unusedVar",["109"],["110"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'useEffect' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"user_id\"] found.","Property","unnecessarilyComputedProperty",{"range":"112","text":"113"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},[1069,1080],"\"user_id\"","Update the dependencies array to be: [fetchUsers, userName]",{"range":"116","text":"117"},[962,972],"[fetchUsers, userName]"]